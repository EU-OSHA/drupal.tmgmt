<?php


function osha_tmgmt_demo_install() {
  module_load_include('inc', 'osha_tmgmt', 'osha_tmgmt.fields');

  // Make the body field translatable
  module_load_include('inc', 'entity_translation', 'entity_translation.admin');
  entity_translation_translatable_switch(1, 'body');

  // Attach fields to osha_tmgmt_demo_article.
  $info = field_info_field('body');
  if (!$info) {
    $config = array(
      'active' => 1,
      'cardinality' => 1,
      'deleted' => 0,
      'entity_types' => array(
        0 => 'node',
      ),
      'field_name' => 'body',
      'foreign keys' => array(
        'format' => array(
          'columns' => array(
            'format' => 'format',
          ),
          'table' => 'filter_format',
        ),
      ),
      'indexes' => array(
        'format' => array(
          0 => 'format',
        ),
      ),
      'locked' => 0,
      'module' => 'text',
      'settings' => array(
        'entity_translation_sync' => FALSE,
      ),
      'translatable' => 1,
      'type' => 'text_with_summary',
    );
    field_create_field($config);
  }

  $info = field_info_field('title_field');
  if (!$info) {
    $config = array(
      'active' => 1,
      'cardinality' => 1,
      'deleted' => 0,
      'entity_types' => array(),
      'field_name' => 'title_field',
      'foreign keys' => array(
        'format' => array(
          'columns' => array(
            'format' => 'format',
          ),
          'table' => 'filter_format',
        ),
      ),
      'indexes' => array(
        'format' => array(
          0 => 'format',
        ),
      ),
      'locked' => 0,
      'module' => 'text',
      'settings' => array(
        'entity_translation_sync' => FALSE,
        'max_length' => 255,
      ),
      'translatable' => 1,
      'type' => 'text',
    );
    field_create_field($config);
  }

  $config = array(
    'bundle' => 'osha_tmgmt_demo_article',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 1,
      ),
      'teaser' => array(
        'label' => 'above',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'title_field',
    'label' => 'Title',
    'required' => TRUE,
    'settings' => array(
      'entity_translation_sync' => FALSE,
      'hide_label' => array(
        'entity' => FALSE,
        'page' => FALSE,
      ),
      'text_processing' => 0,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'module' => 'text',
      'settings' => array(
        'size' => 60,
      ),
      'type' => 'text_textfield',
      'weight' => -5,
    ),
  );
  field_create_instance($config);

  $config = array(
    'bundle' => 'osha_tmgmt_demo_article',
    'default_value' => NULL,
    'deleted' => 0,
    'description' => '',
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'module' => 'text',
        'settings' => array(),
        'type' => 'text_default',
        'weight' => 0,
      ),
      'teaser' => array(
        'label' => 'hidden',
        'module' => 'text',
        'settings' => array(
          'trim_length' => 600,
        ),
        'type' => 'text_summary_or_trimmed',
        'weight' => 0,
      ),
    ),
    'entity_type' => 'node',
    'field_name' => 'body',
    'label' => 'Body',
    'required' => FALSE,
    'settings' => array(
      'display_summary' => TRUE,
      'entity_translation_sync' => FALSE,
      'text_processing' => 1,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'module' => 'text',
      'settings' => array(
        'rows' => 20,
        'summary_rows' => 5,
      ),
      'type' => 'text_textarea_with_summary',
      'weight' => -4,
    ),
  );
  field_create_instance($config);

  $config = osha_tmgmt_field_character_count_instance();
  $config['bundle'] = 'osha_tmgmt_demo_article';
  field_create_instance($config);

  $config = osha_tmgmt_field_page_count_instance();
  $config['bundle'] = 'osha_tmgmt_demo_article';
  field_create_instance($config);

  t('Automatically calculated when saving. The count of characters found in the default language text (English).');
  t('Automatically calculated when saving. The count of pages of text in the default language (English).');
  t('Body');
  t('Character count');
  t('Page count');
  t('Title');

  // Enable language negotiation for URL
  $form_state = array(
    'values' => array(
      'language' => array(
        'weight' => array(
          'locale-url' => -8,
          'locale-session' => -6,
          'locale-user' => -4,
          'locale-browser' => -2,
          'language-default' => 10
        ),
        'enabled' => array(
          'locale-url' => 1,
          'locale-session' => 0,
          'locale-user' => 0,
          'locale-browser' => 0,
          'language-default' => 0,
        )
      ),
      'language_content' => array(
        'weight' => array(
          'locale-url' => -8,
          'locale-session' => -6,
          'locale-user' => -4,
          'locale-browser' => -2,
          'language-default' => 10
        ),
        'enabled' => array(
          'locale-url' => 1,
          'locale-session' => 0,
          'locale-user' => 0,
          'locale-browser' => 0,
          'locale-interface' => 0,
          'language-default' => 0,
        )
      )
    )
  );

  module_load_include('inc', 'locale', 'locale.admin');
  $form  = drupal_get_form('locale_languages_configure_form');
  locale_languages_configure_form_submit($form, $form_state);

  // Enable entity translation for taxonomy terms
  $cfg = variable_get('entity_translation_entity_types');
  $cfg['taxonomy_term'] = 'taxonomy_term';
  variable_set('entity_translation_entity_types', $cfg);
  module_load_include('inc', 'entity_translation', 'entity_translation.admin');
  $form_state = array();
  entity_translation_admin_form_submit(array(), $form_state);


  include_once 'osha_tmgmt_demo.wysiwyg.inc';
  $profiles = osha_tmgmt_demo_wysiwyg_default_profiles();
  $full_html = $profiles['full_html'];
  // @todo: Do some checks before, maybe another editor is already configured?
  // Setup the WYSIWYG editor profile for the 'full_html'
  db_merge('wysiwyg')
    ->key(array('format' => $full_html['format']))
    ->fields(array(
      'editor' => $full_html['editor'],
      'settings' => serialize($full_html['settings']),
    ))
    ->execute();
  wysiwyg_profile_cache_clear();

  // Add EU25 languages.
  module_load_include('inc', 'osha_tmgmt_demo', 'osha_tmgmt_demo.languages');
  $languages = osha_tmgmt_demo_get_languages();
  foreach($languages as $language) {
    $language = (object) $language;
    locale_add_language(
      $language->language,
      $language->name,
      $language->native,
      $language->direction,
      $language->domain,
      $language->prefix,
      $language->enabled,
      0
    );
    // Additional params, locale_add_language does not implement.
    db_update('languages')
      ->fields(array(
        'plurals' => empty($language->plurals) ? 0 : $language->plurals,
        'formula' => empty($language->formula) ? '' : $language->formula,
        'weight' => empty($language->weight) ? 0 : $language->weight,
      ))
      ->condition('language', $language->language)
      ->execute();
  }

  // Create the demo roles & users
  module_load_include('inc', 'osha_tmgmt_demo', 'osha_tmgmt_demo.permissions');
  $demo_roles = osha_tmgmt_demo_roles();
  foreach($demo_roles as $role) {
    user_role_save($role);
  }

  $users = osha_tmgmt_demo_users();
  foreach($users as $u) {
    user_save('', $u);
  }

  // Create demo translators queues
  $groups = array('translators_group_1', 'translators_group_2', 'translators_group_3');
  foreach($groups as $entity_name) {
    $entity = entity_import('entity_collection', strtr('{
    "type" : null,
    "name" : "translators_group_n",
    "bid" : null,
    "title" : "translators_group_n",
    "cache" : null,
    "requiredcontexts" : [],
    "contexts" : [],
    "bundle" : "translators_group",
    "style" : "entity_collection_style_flat",
    "row" : "entity_collection_row_view_mode",
    "settings" : {
      "row_settings" : [],
      "style_settings" : [],
      "allowed_bundles" : {
        "node" : [],
        "taxonomy_term" : [],
        "comment" : [],
        "entity_collection" : [],
        "i18n_translation" : [],
        "file" : [],
        "taxonomy_vocabulary" : [],
        "tmgmt_job" : [],
        "tmgmt_job_item" : [],
        "tmgmt_message" : [],
        "tmgmt_translator" : [],
        "tmgmt_remote" : [],
        "tmgmt_local_task" : [],
        "tmgmt_local_task_item" : [],
        "user" : [ "user" ],
        "workbench_moderation_transition" : [],
        "translation_validator" : [],
        "rules_config" : []
      }
    },
    "rdf_mapping" : []
  }', array('translators_group_n' => $entity_name)));
    entity_save('entity_collection', $entity);
  }
  entity_collection_flush_caches();
  // Add users to entity collection.
  $user_cv1 = user_load_by_name('demo_cv1');
  $user_cv2 = user_load_by_name('demo_cv2');
  $user_cv3 = user_load_by_name('demo_cv3');
  $values = array(
    'user:' . $user_cv1->uid => array(
      'key' => 'user:' . $user_cv1->uid,
      'entity_id' => $user_cv1->uid,
      'type' => 'user',
      'position' => '0',
    ),
    'user:' . $user_cv2->uid => array(
      'key' => 'user:' . $user_cv2->uid,
      'entity_id' => $user_cv2->uid,
      'type' => 'user',
      'position' => '1',
    ),
    'user:' . $user_cv3->uid => array(
      'key' => 'user:' . $user_cv3->uid,
      'entity_id' => $user_cv3->uid,
      'type' => 'user',
      'position' => '2',
    ),
  );

  module_load_include('inc', 'entity_collection', 'entity_collection.admin');
  $entity_collection = entity_collection_load('translators_group_1');
  $tree = entity_collection_content_build_tree($entity_collection, $values);
  $ec_storage = new EntityCollectionStorageDB();
  $ec_storage->save($entity_collection, $tree);

  // Make the full_html the default format
  module_load_include('inc', 'filter', 'filter.admin');
  $cfg = array('values' =>
    array(
      'formats' => array(
        'full_html' => array('weight' => -10),
        'filtered_html' => array('weight' => -9),
        'plain_text' => array('weight' => -8),
      )
    )
  );
  drupal_form_submit('filter_admin_overview', $cfg);

  // Replace name and desc for tags.
  title_field_replacement_toggle('taxonomy_term', 'tags', 'name');
  title_field_replacement_toggle('taxonomy_term', 'tags', 'description');

  // Set tags as translatable.
  $voc = taxonomy_vocabulary_machine_name_load('tags');
  $voc->i18n_mode = 1;
  entity_save('taxonomy_vocabulary', $voc);

  // Make main menu translatable.
  $menu = menu_load('main-menu');
  $menu['i18n_mode'] = 5;
  menu_save($menu);

  _osha_tmgmt_demo_create_demo_content();
}

function _osha_tmgmt_demo_create_demo_content() {
  module_load_include('test', 'osha_tmgmt' , 'tests/osha_tmgmt.content_definition');

  // Create demo tag term.
  $voc = taxonomy_vocabulary_machine_name_load('tags');
  $term = new stdClass();
  $term->vid = $voc->vid;
  $term->name = OSHA_TMGMT_TERM_NAME;
  $term->description = OSHA_TMGMT_TERM_DESC;
  taxonomy_term_save($term);

  // Create a demo article
  $node = new stdClass();
  $node->type = 'osha_tmgmt_demo_article';
  $node->title = OSHA_TMGMT_TEST_TITLE;
  $node->title_field['en'][0]['value'] = OSHA_TMGMT_TEST_TITLE;
  $node->body['en'][0]['value'] = OSHA_TMGMT_TEST_BODY;
  $node->workbench_moderation_state_new = 'published';
  // Set the fields so the hook will pick them up to compute them
  $node->field_character_count[LANGUAGE_NONE][0]['value'] = 0;
  $node->field_page_count[LANGUAGE_NONE][0]['value'] = 0;

  $node->status = 1;
  node_object_prepare($node);
  node_submit($node);
  node_save($node);
  $translation_handler = entity_translation_get_handler('node', $node);
  $translation_handler->initTranslations();
  $translation_handler->saveTranslations();

  // Create demo menu link
  $item = array (
    'link_title' => 'VVV',
    'link_path' => 'node/2',
    'menu_name' => 'main-menu',
    'enabled' => 1,
    'weight' => 0,
    'plid' => 0,
    'customized' => 1,
    'language' => LANGUAGE_NONE,
    'options' => array('alter' => TRUE),
  );
  menu_link_save($item);
}
