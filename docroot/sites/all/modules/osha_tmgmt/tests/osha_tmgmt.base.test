<?php

/*
 * @file
 * Contains tests for EU-OSHA Translation management
 */

define ('OSHA_TMGMT_TEST_TITLE', 'Sample article with a long title');
define ('OSHA_TMGMT_TEST_BODY', '<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque gravida lectus vitae fermentum imperdiet. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Mauris sed ligula nibh. Nulla magna arcu, maximus sed facilisis eget, laoreet at dui. Sed est lectus, venenatis non purus a, mattis aliquam odio. Quisque facilisis urna eu pellentesque eleifend. Donec at ultrices nisi, ut imperdiet nibh. Donec facilisis purus eget blandit feugiat. Praesent sed justo laoreet, venenatis ex at, efficitur lacus. Phasellus quis urna nisi. Quisque ac odio turpis. Morbi sed ex in elit ultricies mattis et eu augue. Curabitur consectetur at velit sed egestas.</p><p>Sed sed egestas turpis. Donec felis velit, lacinia eu efficitur id, finibus a quam. Pellentesque tempor malesuada lectus in vestibulum. Nulla a ornare tellus, vel sollicitudin nibh. Aliquam erat volutpat. Morbi condimentum arcu risus, a maximus ligula ullamcorper vel. Sed eleifend quam et mi blandit accumsan. Aenean orci tortor, varius at est at, vehicula convallis lectus. Integer lectus nisi, dapibus ac risus eu, rhoncus accumsan velit. Mauris porta sollicitudin tellus ut auctor. Nullam consectetur ligula turpis, nec feugiat lacus facilisis eget. Sed feugiat lorem imperdiet consectetur sollicitudin. Mauris rhoncus ullamcorper velit at placerat. Cras fermentum tellus id tellus convallis, eu consequat erat faucibus. Fusce volutpat aliquam porta. Integer eu est tortor.</p><p>Aenean lorem magna, mattis ut semper nec, sagittis a erat. Fusce hendrerit interdum blandit. Nam vehicula rutrum aliquam cras amet.</p>');

/**
 * Base class for tests.
 */
class OSHATMGMTBaseTestCase extends DrupalWebTestCase {
  protected $profile = 'standard';

  /**
   * A default translator using the test translator.
   *
   * @var TMGMTTranslator
   */
  protected $default_translator;

  /**
   * List of permissions used by loginAsAdmin().
   *
   * @var array
   */
  protected $admin_permissions = array();

  /**
   * Drupal user object created by loginAsAdmin().
   *
   * @var object
   */
  protected $admin_user = NULL;

  /**
   * List of permissions used by loginAsTranslator().
   *
   * @var array
   */
  protected $translator_permissions = array();

  /**
   * Drupal user object created by loginAsTranslator().
   *
   * @var object
   */
  protected $translator_user = NULL;

  /**
   * Overrides DrupalWebTestCase::setUp()
   */
  function setUp() {
    $modules = func_get_args();
    if (isset($modules[0]) && is_array($modules[0])) {
      $modules = $modules[0];
    }

    $modules = array_merge(array('entity', 'tmgmt', 'tmgmt_test', 'osha_tmgmt', 'osha_tmgmt_demo'), $modules);
    parent::setUp($modules);
    $this->default_translator = tmgmt_translator_load('test_translator');

    // Load default admin permissions.
    $this->admin_permissions = array(
      'administer languages',
      'access administration pages',
      'administer content types',
      'administer tmgmt',
    );

    // Load default translator user permissions.
    $this->translator_permissions = array(
      'create translation jobs',
      'submit translation jobs',
      'accept translation jobs',
    );
  }

  /**
   * Will create a user with admin permissions and log it in.
   *
   * @param array $additional_permissions
   *   Additional permissions that will be granted to admin user.
   * @param boolean $reset_permissions
   *   Flag to determine if default admin permissions will be replaced by
   *   $additional_permissions.
   *
   * @return object
   *   Newly created and logged in user object.
   */
  function loginAsAdmin($additional_permissions = array(), $reset_permissions = FALSE) {
    $permissions = $this->admin_permissions;

    if ($reset_permissions) {
      $permissions = $additional_permissions;
    }
    elseif (!empty($additional_permissions)) {
      $permissions = array_merge($permissions, $additional_permissions);
    }

    $this->admin_user = $this->drupalCreateUser($permissions);
    $this->drupalLogin($this->admin_user);
    return $this->admin_user;
  }

  /**
   * Will create a user with translator permissions and log it in.
   *
   * @param array $additional_permissions
   *   Additional permissions that will be granted to admin user.
   * @param boolean $reset_permissions
   *   Flag to determine if default admin permissions will be replaced by
   *   $additional_permissions.
   *
   * @return object
   *   Newly created and logged in user object.
   */
  function loginAsTranslator($additional_permissions = array(), $reset_permissions = FALSE) {
    $permissions = $this->translator_permissions;

    if ($reset_permissions) {
      $permissions = $additional_permissions;
    }
    elseif (!empty($additional_permissions)) {
      $permissions = array_merge($permissions, $additional_permissions);
    }

    $this->translator_user = $this->drupalCreateUser($permissions);
    $this->drupalLogin($this->translator_user);
    return $this->translator_user;
  }

  /**
   * Creates, saves and returns a translator.
   *
   * @return TMGMTTranslator
   */
  function createTranslator() {
    $translator = new TMGMTTranslator();
    $translator->name = strtolower($this->randomName());
    $translator->label = $this->randomName();
    $translator->plugin = 'test_translator';
    $translator->settings = array(
      'key' => $this->randomName(),
      'another_key' => $this->randomName(),
    );
    $this->assertEqual(SAVED_NEW, $translator->save());

    // Assert that the translator was assigned a tid.
    $this->assertTrue($translator->tid > 0);
    return $translator;
  }


  /**
   * Sets the proper environment.
   *
   * Currently just adds a new language.
   *
   * @param string $langcode
   *   The language code.
   */
  function setEnvironment($langcode) {
    // Add the language.
    locale_add_language($langcode);
  }

  function createTestNode() {
    $edit = array(
      'title_field[und][0][value]' => OSHA_TMGMT_TEST_TITLE,
      // 1622 characters
      'body[und][0][value]' => OSHA_TMGMT_TEST_BODY,
    );
    $this->drupalPost('node/add/osha-tmgmt-demo-article', $edit, t('Save'));
    $this->assertText('Sample article with a long title', 'Found the test title');
  }
}
