<?php

//include_once "osha_tmgmt.module";

/**
 * Implements hook_uninstall().
 */
function osha_tmgmt_uninstall() {
  if (db_field_exists('tmgmt_job_item', 'source_language')) {
    watchdog('osha_tmgmt', 'Removing source_language field from tmgmt_job_item');
    db_drop_field('tmgmt_job_item', 'source_language');
  }
  if (db_field_exists('tmgmt_job_item', 'target_language')) {
    watchdog('osha_tmgmt', 'Removing target_language field from tmgmt_job_item');
    db_drop_field('tmgmt_job_item', 'target_language');
  }
  if (db_field_exists('tmgmt_job_item', 'character_count')) {
    watchdog('osha_tmgmt', 'Removing character_count field from tmgmt_job_item');
    db_drop_field('tmgmt_job_item', 'character_count');
  }
  if (db_field_exists('tmgmt_job_item', 'page_count')) {
    watchdog('osha_tmgmt', 'Removing page_count field from tmgmt_job_item');
    db_drop_field('tmgmt_job_item', 'page_count');
  }
  if (db_field_exists('tmgmt_job_item', 'is_full_translation')) {
    watchdog('osha_tmgmt', 'Removing is_full_translation field from tmgmt_job_item');
    db_drop_field('tmgmt_job_item', 'is_full_translation');
  }

  if (db_field_exists('tmgmt_job', 'character_count')) {
    watchdog('osha_tmgmt', 'Removing character_count field from tmgmt_job');
    db_drop_field('tmgmt_job_item', 'character_count');
  }
  if (db_field_exists('tmgmt_job', 'page_count')) {
    watchdog('osha_tmgmt', 'Removing page_count field from tmgmt_job');
    db_drop_field('tmgmt_job_item', 'page_count');
  }
  if (db_field_exists('tmgmt_job', 'priority')) {
    watchdog('osha_tmgmt', 'Removing priority field from tmgmt_job');
    db_drop_field('tmgmt_job', 'priority');
  }

  module_load_include('inc', 'osha_tmgmt', 'osha_tmgmt.fields');
  field_delete_instance(osha_tmgmt_field_osha_tmgmt_notification_instance());
  field_delete_field('field_osha_tmgmt_notification');
  // @todo - Also delete the field_character_count & field_page_count?
}


/**
 * Implements hook_install().
 */
function osha_tmgmt_install() {
  db_update('system')
    ->fields(array('weight' => 9))
    ->condition('name', 'osha_tmgmt', '=')
    ->execute();

  module_load_include('inc', 'osha_tmgmt', 'osha_tmgmt.fields');
  // Create field page count.
  field_create_field(osha_tmgmt_field_page_count_base());
  // Create field character count.
  field_create_field(osha_tmgmt_field_character_count_base());
  // Create base & instance for field_osha_tmgmt_notification.
  field_create_field(osha_tmgmt_field_osha_tmgmt_notification_base());
  $config = osha_tmgmt_field_osha_tmgmt_notification_instance();
  $config['bundle'] = 'user';
  field_create_instance($config);
  t('Receive OSHA translation notifications');


  // tmgmt_job_item alteration.
  if (!db_field_exists('tmgmt_job_item', 'source_language')) {
    // tmgmt_job_item.source_language
    // Accepts NULL because language is assigned when the cart is checked out
    $field = array(
      'type' => 'varchar',
      'length' => 12,
      'not null' => FALSE,
      'description' => 'Entity original language',
    );
    db_add_field('tmgmt_job_item', 'source_language', $field);
  }

  if (!db_field_exists('tmgmt_job_item', 'target_language')) {
    // Accepts NULL because language is assigned when the cart is checked out
    $field = array(
      'type' => 'varchar',
      'length' => 12,
      'not null' => FALSE,
      'description' => 'Language to translate item into',
    );
    db_add_field('tmgmt_job_item', 'target_language', $field);
  }

  if (!db_field_exists('tmgmt_job_item', 'character_count')) {
    $field = array(
      'type' => 'int',
      'default' => 0,
      'not null' => TRUE,
      'description' => 'Number of characters for this job item',
    );
    db_add_field('tmgmt_job_item', 'character_count', $field);
  }

  if (!db_field_exists('tmgmt_job_item', 'page_count')) {
    $field = array(
      'type' => 'numeric',
      'precision' => 6,
      'scale' => 2,
      'default' => 0,
      'not null' => TRUE,
      'description' => 'Number of pages for this job item',
    );
    db_add_field('tmgmt_job_item', 'page_count', $field);
  }

  if (!db_field_exists('tmgmt_job_item', 'eid')) {
    $field = array(
      'description' => 'Translation Validators groups',
      'type' => 'int',
      'default' => NULL,
      'not null' => FALSE,
    );
    db_add_field('tmgmt_job_item', 'eid', $field);
  }

  if (!db_field_exists('tmgmt_job_item', 'vid')) {
    $field = array(
      'description' => 'Translated Revision',
      'type' => 'int',
      'default' => NULL,
      'not null' => FALSE,
    );
    db_add_field('tmgmt_job_item', 'vid', $field);
  }

  if (!db_field_exists('tmgmt_job_item', 'merged')) {
    $field = array(
      'description' => 'If the translation was merged to entity',
      'type' => 'int',
      'default' => NULL,
      'not null' => FALSE,
    );
    db_add_field('tmgmt_job_item', 'merged', $field);
  }


  // tmgmt_job alteration.
  if (!db_field_exists('tmgmt_job', 'character_count')) {
    $field = array(
      'type' => 'int',
      'default' => 0,
      'not null' => TRUE,
      'description' => 'Number of characters for this job item',
    );
    db_add_field('tmgmt_job', 'character_count', $field);
  }

  if (!db_field_exists('tmgmt_job', 'page_count')) {
    $field = array(
      'type' => 'numeric',
      'precision' => 6,
      'scale' => 2,
      'default' => 0,
      'not null' => TRUE,
      'description' => 'Number of pages for this job item',
    );
    db_add_field('tmgmt_job', 'page_count', $field);
  }
  if (!db_field_exists('tmgmt_job', 'priority')) {
    $field = array(
      'type' => 'int',
      'default' => 0,
      'not null' => TRUE,
      'description' => 'Urgency of the translation (0=normal/1=high)',
    );
    db_add_field('tmgmt_job', 'priority', $field);
  }
  if (!db_field_exists('tmgmt_job', 'has_file_uploaded')) {
    $field = array(
      'type' => 'int',
      'default' => 0,
      'not null' => TRUE,
      'description' => 'If the job has file uploaded.',
    );
    db_add_field('tmgmt_job', 'has_file_uploaded', $field);
  }

  if (!db_field_exists('tmgmt_job', 'file_sent')) {
    $field = array(
      'type' => 'int',
      'default' => 0,
      'not null' => TRUE,
      'description' => 'Marks the job if the translation file was sent to CDT',
    );
    db_add_field('tmgmt_job', 'file_sent', $field);
  }

  if (!db_field_exists('tmgmt_job_item', 'is_full_translation')) {
    $field = array(
      'type' => 'int',
      'unsigned' => FALSE,
      'default' => 1,
      'description' => 'FALSE if retranslation, TRUE if full-translation.',
    );
    db_add_field('tmgmt_job_item', 'is_full_translation', $field);
  }

  if (!db_field_exists('tmgmt_job_item', 'retranslation_data')) {
    $field = array(
      'description' => 'Store data for retranslation.',
      'type' => 'text',
      'default' => NULL,
      'size' => 'big',
      'serialize' => TRUE,
    );
    db_add_field('tmgmt_job_item', 'retranslation_data', $field);
  }

  // Configure file translator for the CDT format and remove other translators.
  /* @var TMGMTTranslator $file */
  $file = tmgmt_translator_load('file');
  if ($file) {
    $file->settings['export_format'] = 'xml';
    $file->settings['allow_override'] = FALSE;
    $file->save();
  }

  $local = tmgmt_translator_load('local');
  if ($local) {
    $local->delete();
  }

  // Create the 'Translators Group' entity collection
  $bundle = new stdClass();
  $bundle->disabled = FALSE; /* Edit this to true to make a default preset disabled initially */
  $bundle->api_version = 1;
  $bundle->name = 'translators_group';
  $bundle->storage = 'entity_collection_storage_db';
  $bundle->label = 'Translators Group';
  $bundle->description = '';
  $bundle->settings = array();
  entity_collection_bundle_save($bundle);

  // Disable defautl view - replaced by osha_translation_job_overview.
  $view = views_get_view('tmgmt_ui_job_overview');
  if (!empty($view)) {
    // Revert the view before disable it.
    $view->delete();
    ctools_include('object-cache');
    ctools_object_cache_clear('view', 'tmgmt_ui_job_overview');
    $status = variable_get('views_defaults', array());
    $status['tmgmt_ui_job_overview'] = TRUE;
    variable_set('views_defaults', $status);
  }
}

/**
 * Implements hook_schema().
 */
function osha_tmgmt_schema() {
  $schema = array();

  $schema['osha_tmgmt_job_trans_validators'] = array(
    'description' => 'Base table for the tmgmt job translation validators - translation workflow',
    'fields' => array(
      'tvid' => array(
        'description' => 'Identifier',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'nid' => array(
        'description' => 'Node under translation',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'Translation Validator',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'tjiid' => array(
        'description' => 'Translation Job Item',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'approved' => array(
        'description' => 'NULL not voted, approved or rejected',
        'type' => 'varchar',
        'length' => 64,
        'default' => NULL,
        'not null' => FALSE,
      ),
      'next' => array(
        'description' => '0 - no, 1 - yes',
        'type' => 'int',
        'default' => 0,
        'not null' => TRUE,
      ),
      'weight' => array(
        'description' => 'Order of moderation, lowest first',
        'type' => 'int',
        'default' => 0,
        'not null' => TRUE,
      ),
      'message' => array(
        'description' => 'Message left by the Validator',
        'type' => 'text',
        'size' => 'medium',
      ),
      'deleted' => array(
        'description' => 'Deleted',
        'type' => 'int',
        'default' => 0,
        'unsigned' => TRUE,
      ),
    ),
    'primary key' => array('tvid'),
    'indexes' => array(
      'osha_tmgmt_tv_uid' => array('uid'),
      'osha_tmgmt_tv_nid' => array('nid'),
      'osha_tmgmt_tv_deleted' => array('deleted'),
      'osha_tmgmt_tv_next' => array('next'),
    ),
    'foreign keys' => array(
      'uid' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
      'nid' => array(
        'table' => 'node',
        'columns' => array('nid' => 'nid'),
      ),
      'tjiid' => array(
        'table' => 'tmgmt_job_item',
        'columns' => array('tjiid' => 'tjiid'),
      ),
    ),
  );

  $schema['osha_locales_source_blacklist'] = array(
    'description' => 'List of strings excluded from translation',
    'fields' => array(
      'lid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Source string ID. References {locales_source}.lid.',
      ),
    ),
    'primary key' => array('lid'),
  );

  return $schema;
}

/**
 * Add field retranslation_data to job item.
 */
function osha_tmgmt_update_7018() {
  if (!db_field_exists('tmgmt_job_item', 'retranslation_data')) {
    $field = array(
      'description' => 'Store data for retranslation.',
      'type' => 'text',
      'default' => NULL,
      'size' => 'big',
      'serialize' => TRUE,
    );
    db_add_field('tmgmt_job_item', 'retranslation_data', $field);
  }
}
